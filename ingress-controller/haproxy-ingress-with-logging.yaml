apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: haproxy-ingress
  namespace: ingress-haproxy
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: haproxy-ingress
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: haproxy-ingress
    spec:
      containers:
      - name: access-log
        image: nirmata/netcat:alpine-3.8.2
        ports:
        - name: udp
          containerPort: 514
          protocol: UDP
        args: ["-ul","514"]
      - args:
        - --default-backend-service=$(POD_NAMESPACE)/ingress-default-backend
        - --default-ssl-certificate=$(POD_NAMESPACE)/tls-secret
        - --configmap=$(POD_NAMESPACE)/haproxy-configmap
        - --reload-strategy=native
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: nirmata/haproxy-ingress:latest
        imagePullPolicy: Always
        name: haproxy-ingress
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 1936
          name: stat
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: haproxy-ingress-serviceaccount
      serviceAccountName: haproxy-ingress-serviceaccount
      terminationGracePeriodSeconds: 30
